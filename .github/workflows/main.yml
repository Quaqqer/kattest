name: Nekontrol package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: Check lint
        run: |
          poetry run flake8 .

  format:
    name: Format

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: Check formatting
        run: |
          poetry run black --check .

  test:
    name: Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install compilers
        run: |
          sudo apt install luajit nodejs rustc gcc ghc pypy

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: Run tests
        run: |
          poetry run pytest .

  typecheck:
    name: Typecheck

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install

      - name: Set up pyright
        run: |
          sudo apt install nodejs
          npm install -g pyright


      - name: Type check
        run: |
          pyright --pythonpath "$(poetry env info --path)/bin/python" --warnings

  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --without dev

      - name: Test building
        run: |
          poetry build
